# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
references:
  container_python310: &container_python310
    docker:
      - image: cimg/python:3.10.11
      - name: localstack
        image: localstack/localstack:2.0.2
    working_directory: ~/repo

  # Download and cache dependencies
  restore_cache_python310: &restore_cache_python310
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

  save_cache_python310: &save_cache_python310
    save_cache:
      paths:
        - ~/venv310
      key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

jobs:
  build_python310:
    <<: *container_python310
    steps:
      - checkout
      - *restore_cache_python310
      - run:
          name: install dependencies
          command: |
            pip install --user --upgrade virtualenv
            virtualenv ~/venv310
            . ~/venv310/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            pip install .
      - *save_cache_python310
      - run:
          name: run tests
          environment:
            LOCALSTACK_HOST: localstack
          command: |
            . ~/venv310/bin/activate
            CUMULUS_ENV=testing nose2 --plugin nose2.plugins.doctests --with-doctest
  
  publish_pypi:
    <<: *container_python310
    steps:
      - checkout
      - *restore_cache_python310
      - run:
          name: Deploy to PyPi
          command: |
            virtualenv ~/venv310
            . ~/venv310/bin/activate
            pip install twine
            python setup.py sdist
            twine upload --skip-existing --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*

  publish_release:
    <<: *container_python310
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Publish release
          command: |
            GITHUB_TOKEN=${GITHUB_TOKEN} sh bin/release.sh

workflows:
  version: 2
  build_publish_test_310:
    jobs:
      - build_python310
      - publish_release:
          requires:
            - build_python310
          filters:
            branches:
              only: master
      - publish_pypi:
          requires:
            - build_python310
          filters:
            branches:
              only: master
